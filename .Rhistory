points(0,0, col='red')
points(0,0, col='red', ltw=19)
points(0,0, col='red', lty=19)
points(0,0, col='red', pch=19)
curve(f(x), xlim = c(-5, 5))
points(0,0, col='red', pch=19)
points(0,0, col='red', pch=19, size=20)
curve(f(x), xlim = c(-5, 5))
points(0,0, col='red', pch=21)
curve(f(x), xlim = c(-5, 5))
points(0,0, col='red', pch=15)
points(0,0, col='red', pch=15, cex=3)
points(0,0, col='red', pch=19, cex=3)
curve(f(x), xlim = c(-5, 5))
points(0,0, col='red', pch=19, cex=3)
x0 = c('ana', 'jonas', 'paulo', 'maria', 'pedro', 'joão', 'carla', 'fernanda')
x1 = c(4.6, 9.5, 4.5, 7, 8, 4, 5.6, 9)
shape(x0)
length(x0)
length(x1)
x2 = c(18, 31, 19, 20, 22, 30, 25, 24)
x3 = c('female', 'male', 'male', 'female', 'male', 'male', 'female', 'female')
length(x3)
length(x2)
df = data.frame(x0, x1, x2, x3)
df
head(df)
head(df, 4)
tail(df, 4)
colnames(df)
colnames(df[1])
colnames(df[1]) = 'nomes'
df
colnames(df[1]) = 'nomes'
View(df)
View(df)
colnames(df[1]) = c('nomes')
head(df, 4)
names(df)
names(df)[1] = 'names'
head(df, 4)
names(df) = c('names', 'grades', 'age', 'sex')
head(df, 4)
ncol(df)
nrow(df)
str(df)
table(df)
table(df, by='sex')
table(df, by=sex)
View(df)
table(df, sex)
df['names']
df[['names']]
df['names']
df$names
df[1, 'names']
df[,'names']
df[:,'names']
df[;,'names']
df[1,'names']
df[1,]
df['names']
df['ana', 'names']
df['names']
df['ana']
df['ana', 'names']
df['ana', 1]
df.index
df(index)
index(df)
library(zoo)
index(df)
df[1, ]
index(df) = df$names
index(df) = x0
index(df) == x0
df[1, ]
df[8, ]
row.names(df) = x0
head(df)
df[-1]
df = df[-1]
df['fernanda']
df['fernanda', ]
df['pedro', ]
View(df)
View(df)
head(df)
df
df$monitoring = c('no', 'yes', 'no', 'yes', 'yes', 'no', 'no', 'yes')
df
df$grades*df$age
df$inter = df$grades*df$age
head(df)
df['pedro', 1]
df['pedro', 1] = NaN
df
na.omit(df)
summary(df$grades)
# summary
df['pedro', 1] = 8
mean(df)
mean(df$grades)
summary(df$grades)
sd(df$grades)
table(df$sex)
table(df$monitoring)
df$inter = NULL
df
as.factor(df$sex)
fator = as.factor(df$sex)
fator_sex = as.factor(df$sex)
by(df$grades, fator_sex, mean)
by(df$age, fator_sex, mean)
fator_monitor = as.factor(df$monitoring)
by(df$age, fator_sex, summary)
by(df$grades, fator_monitor, summary)
curve(dnorm(x))
curve(dnorm(x), xlim= c(-1, 1))
curve(dnorm(x), xlim= c(-5, 5))
curve(dnorm(x), xlim= c(-5, 5), col='red')
curve(dnorm(x), xlim= c(-5, 5), col='blue')
curve(dnorm(x), xlim= c(-5, 5), col='blue', ltw=2)
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='b')
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='o')
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='s')
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='h')
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='b')
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='l')
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='l', pch=2)
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='l', pch=19)
curve(dnorm(x), xlim= c(-5, 5), col='blue',  pch=19)
fx = function(x){
x^2
}
curve(fx)
curve(fx, xlim = c(-5, 5))
curve(fx, xlim = c(-5, 5), col='blue', type='o')
curve(fx, xlim = c(-5, 5), col='blue', type='o',
xlab = 'X', ylab = '$X^2$')
curve(fx, xlim = c(-5, 5), col='blue', type='o',
xlab = 'X', ylab = '{'X^2'}')
curve(fx, xlim = c(-5, 5), col='blue', type='o',
xlab = 'X', ylab = '{'*X^2*'}')
library(latex2exp)
curve(fx, xlim = c(-5, 5), col='blue', type='o',
xlab = 'X', ylab = TeX('X^2'))
curve(fx, xlim = c(-5, 5), col='blue', type='o',
xlab = 'X', ylab = TeX('X^2'), main='My function')
plot(fx, x)
x= seq(-5, 5, 0.01)
plot(fx(x), x)
plot(x, fx(x))
plot(x, fx(x), type='l')
plot(x, fx(x), type='l', lwd=4)
plot(x, fx(x), type='l', lwd=4, lwd=3)
plot(x, fx(x), type='l', lwd=4, lty=3)
plot(x, fx(x), type='l', lwd=5, lty=3)
plot(x, fx(x), type='l', lwd=2, lty=3)
plot(x, fx(x), type='l', lwd=3, lty=3)
plot(x, fx(x), type='l', lwd=4, lty=3)
plot(x, fx(x), type='l', lwd=5, lty=3)
plot(x, fx(x), type='l', lwd=8, lty=3)
plot(x, fx(x), type='l', lwd=9, lty=3)
plot(x, fx(x), type='l', lwd=9, lty=1)
plot(x, fx(x), type='l', lwd=9, lty=0.3)
plot(x, fx(x), type='l', lwd=9, lty=0.8)
plot(x, fx(x), type='l', lwd=9, lty=1)
plot(x, fx(x), type='l', lwd=9)
plot(x, fx(x), type='l', lwd=1)
plot(x, fx(x), type='l', lwd=1, lty=1)
plot(x, fx(x), type='l', lwd=1, lty=2)
plot(x, fx(x), type='l', lwd=1, lty=3)
hline(0)
abline(h=10)
abline(h=10, col='blue')
abline(v=0, col='red')
abline(v=0, col='red', lwd=2)
abline(v=0, col='red', lty=2)
plot(x, fx(x), type='l', lwd=1, lty=1)
abline(h=10, col='blue', lty=2)
abline(v=0, col='red', lty=3)
plot(x. x^3)
plot(x, x^3)
plot(x, x^3, type='l')
points(c(0,0))
points(0,0)
plot(x, x^3, type='l')
points(0,0)
points(0,0, pch=19)
points(0,0, pch=19, col='red')
points(0,0, pch=19, col='red', size=8)
points(0,0, pch=19, col='red', cex=3)
plot(dnorm(100), dnorm(100))
plot(dnorm(100, 0, 1), dnorm(100, 0, 1))
dnorm(100, 0, 1)
dnorm(10)
rnorm(10)
plot(rnorm(100, 0, 1), rnorm(100, 0, 1))
plot(rnorm(100, 0, 1), rnorm(100, 0, 1), pch=19)
plot(rnorm(100, 0, 1), rnorm(100, 0, 1), pch=19, col='red')
plot(rnorm(100, 0, 1), rnorm(100, 10, 5),
pch=19,
col='red')
plot(rnorm(100, 0, 1), rnorm(100, 10, 5),
pch=19,
col='red',
xlab = 'normal- m=0, v=1',
lab = 'normal- m=10, v=5')
plot(rnorm(100, 0, 1), rnorm(100, 10, 5),
pch=19,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
df[df$grades>5]
df[df$grades>5,]
df[df$sex=='male', ]
df[df$monitoring=='yes', ]
df[df$age>25]
df[df$age>25,]
df[, 2]
df[[, 2]]
df[, 2]
fx = function(x){
x^2
}
library(latex2exp)
curve(fx, xlim = c(-5, 5), col='blue', type='o',
xlab = 'X', ylab = TeX('X^2'), main='My function')
x= seq(-5, 5, 0.01)
# lwd espessura da linha, lty muda o tipo da linha
plot(x, fx(x), type='l', lwd=1, lty=1)
abline(h=10, col='blue', lty=2)
abline(v=0, col='red', lty=3)
segments(-4, 4, 4, -4)
segments(-4, 4, 4, 20)
plot(x, fx(x), type='l', lwd=1, lty=1)
abline(h=10, col='blue', lty=2)
abline(v=0, col='red', lty=3)
segments(-4, 4, 4, 20)
plot(rnorm(100, 0, 1), rnorm(100, 10, 5),
pch=19,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
# scatter
g=rnorm(100, 0, 1)
k=rnorm(100, 10, 5)
plot(g, k,
pch=19,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
# scatter
set.seed(10)
identify(g, 4)
identify(g, k, 4)
x= seq(-5, 5, 0.01)
par(mfrow=c(2, 2))
plot(x, exp(x))
plot(x, log(x))
plot(x, x^2)
plot(x, 1/x)
par(mfrow=c(2, 2))
plot(x, exp(x), type='l', main='exp(x)')
plot(x, log(x), type='l', main = 'log(x)')
plot(x, x^2, type='l', main='x^2')
plot(x, 1/x, type='l', main='1/x')
windows()
par(mfrow=c(2, 2))
plot(x, exp(x), type='l', main='exp(x)')
plot(x, log(x), type='l', main = 'log(x)')
plot(x, x^2, type='l', main='x^2')
plot(x, 1/x, type='l', main='1/x')
## create vectors
x0 = c('ana', 'jonas', 'paulo', 'maria', 'pedro', 'joão', 'carla', 'fernanda')
x1 = c(4.6, 9.5, 4.5, 7, 8, 4, 5.6, 9)
x2 = c(18, 31, 19, 20, 22, 30, 25, 24)
x3 = c('female', 'male', 'male', 'female', 'male', 'male', 'female', 'female')
length(x2)
df = data.frame(x0, x1, x2, x3)
df
df
# see elements of df
head(df, 4)
tail(df, 4)
ncol(df)
nrow(df)
str(df)
names(df)
names(df)[1] = 'names'
names(df) = c('names', 'grades', 'age', 'sex')
head(df, 4)
df['names']
df[['names']]
df$names
df[1, 'names']
df[1, ]
df[8, ]
df[df$grades>5, ]   # grade>5
df[df$sex=='male', ]   # only male
df[df$monitoring=='yes', ]
df[df$age>25, ]
df[df$monitoring=='yes', ]
# adding new column
df$monitoring = c('no', 'yes', 'no', 'yes', 'yes', 'no', 'no', 'yes')
head(df)
# operations
df$inter = df$grades*df$age
head(df)
df[df$monitoring =='yes', ]
df[df$age>25, ]
index(df)
library(zoo)
index(df)
row.names(df) = x0
row.names(df) = x0
head(df)
df = df[-1] # del column
df['fernanda', ]
df['pedro', ]
df$inter = NULL
df['pedro', 1] = NaN
na.omit(df)
summary(df$grades)
table(df$sex)
table(df$monitoring)
fator_sex = as.factor(df$sex)
by(df$grades, fator_sex, mean)
df['pedro', 1] = 8
by(df$grades, fator_sex, mean)
by(df$age, fator_sex, summary)
fator_monitor = as.factor(df$monitoring)
by(df$grades, fator_monitor, summary)
curve(dnorm(x), xlim= c(-5, 5), col='blue', type='l')
fx = function(x){
x^2
}
library(latex2exp)
curve(fx, xlim = c(-5, 5), col='blue', type='o',
xlab = 'X', ylab = TeX('X^2'), main='My function')
x= seq(-5, 5, 0.01)
# lwd espessura da linha, lty muda o tipo da linha
plot(x, fx(x), type='l', lwd=1, lty=1)
abline(h=10, col='blue', lty=2)
abline(v=0, col='red', lty=3)
segments(-4, 4, 4, 20)
plot(x, x^3, type='l')
points(0,0, pch=19, col='red', cex=3)
points(c(-4, -99), c(2,50))
points(c(-4, 2), c(-99,50))
plot(x, x^3, type='l')
points(0,0, pch=19, col='red', cex=3)
points(c(-4, 2), c(-99,50))
set.seed(10)
g=rnorm(100, 0, 1)
k=rnorm(100, 10, 5)
plot(g, k,
pch=19,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=10,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=11,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=2,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=3,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=4,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=5,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=6,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=7,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=8,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
plot(g, k,
pch=19,
col='red',
xlab = 'normal- m=0, v=1',
ylab = 'normal- m=10, v=5')
hist(g)
hist(g, breaks = 25)
hist(g, breaks = 20, )
hist(g, breaks = 20, col='lightgreen' )
hist(g, breaks = 20, col='lightgreen', main = 'Histogram - Normal dist')
hist(g, breaks = 20, col='lightgreen', main = 'Histogram - Normal dist', probability = T)
hist(rnorm(1000), breaks = 20, col='lightgreen',
main = 'Histogram - Normal dist',
probability = T)
hist(rnorm(10000), breaks = 20, col='lightgreen',
main = 'Histogram - Normal dist',
probability = T)
curve(dnorm(x))
hist(rnorm(10000), breaks = 20, col='lightgreen',
main = 'Histogram - Normal dist',
probability = T)
curve(dnorm(x), add=T)
windows()
par(mfrow=c(2, 2))
plot(x, exp(x), type='l', main='exp(x)')
plot(x, log(x), type='l', main = 'log(x)')
plot(x, x^2, type='l', main='x^2')
plot(x, 1/x, type='l', main='1/x')
plot(x, x^2, type='l', main=TeX('x^2'))
windows()
par(mfrow=c(2, 2))
plot(x, exp(x), type='l', main='exp(x)')
plot(x, log(x), type='l', main = 'log(x)')
plot(x, x^2, type='l', main=TeX('x^2'))
plot(x, 1/x, type='l', main='1/x')
plot(x, exp(x), type='l', main= TeX('exp(x)') )
plot(x, exp(x), type='l', main= TeX('\exp(x)') )
plot(x, exp(x), type='l', main= TeX('e^x') )
plot(x, log(x), type='l', main = 'log(x)')
plot(x, log(x), type='l', main = '\log(x)')
plot(x, 1/x, type='l', main='1/x')
plot(x, 1/x, type='l', main=Tex('1/x') )
plot(x, 1/x, type='l', main= TeX('1/x') )
plot(x, 1/x, type='l', main= TeX('\frac{1}{x}') )
windows()
par(mfrow=c(2, 2))
plot(x, exp(x), type='l', main= TeX('e^x') )
plot(x, log(x), type='l', main = 'log(x)')
plot(x, x^2, type='l', main=TeX('x^2'))
plot(x, 1/x, type='l', main= TeX('1/x') )
plot(x, 1/x, type='l', main= TeX('$1/x$') )
plot(x, 1/x, type='l', main= TeX('$\\frac{1}{x}$') )
plot(x, 1/x, type='l', main= TeX('$\frac{1}{x}$') )
plot(x, 1/x, type='l', main= TeX('$\\frac{1}{x}$') )
plot(x, log(x), type='l', main = '$\\log(x)$')
plot(x, log(x), type='l', main = '$\log(x)$')
plot(x, log(x), type='l', main = TeX('$\log(x)$'))
plot(x, log(x), type='l', main = TeX('$\\log(x)$'))
windows()
par(mfrow=c(2, 2))
plot(x, exp(x), type='l', main= TeX('e^x') )
plot(x, log(x), type='l', main = TeX('$\\log(x)$'))
plot(x, x^2, type='l', main=TeX('x^2'))
plot(x, 1/x, type='l', main= TeX('$\\frac{1}{x}$') )
hist(rnorm(10000), breaks = 20, col='lightgreen',
main = 'Histogram - Normal dist',
probability = T)
curve(dnorm(x), add=T)
df['names']
df
## create vectors
x0 = c('ana', 'jonas', 'paulo', 'maria', 'pedro', 'joão', 'carla', 'fernanda')
x1 = c(4.6, 9.5, 4.5, 7, 8, 4, 5.6, 9)
x2 = c(18, 31, 19, 20, 22, 30, 25, 24)
x3 = c('female', 'male', 'male', 'female', 'male', 'male', 'female', 'female')
## len of vectors
length(x2)
## create data frame
df = data.frame(x0, x1, x2, x3)
df
# see elements of df
head(df, 4)
tail(df, 4)
# colnames
ncol(df)
nrow(df)
str(df)
names(df)
# change colnames
names(df)[1] = 'names'
# or
names(df) = c('names', 'grades', 'age', 'sex')
head(df, 4)
# adding new column
df$monitoring = c('no', 'yes', 'no', 'yes', 'yes', 'no', 'no', 'yes')
head(df)
# operations
df$inter = df$grades*df$age
head(df)
df['names']
s =df['names']
str(s)
ss = df[['names']]
str(ss)
setwd('D:/Git projects/Econometry')   # definir o diretório
